apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: prod
  labels:
    app: mysql
spec:
  serviceName: mysql-service  # Actualizado a "mysql-service"
  replicas: 2
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mysql
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mysql
        image: mysql:8.4
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                counter=0
                until mysqladmin ping -uroot -p${MYSQL_ROOT_PASSWORD} --silent || [ $counter -eq 30 ]; do
                  sleep 2
                  counter=$((counter+1))
                done
                
                if [[ $(hostname) =~ -0$ ]]; then
                  echo "Configurando nodo maestro..."
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "CREATE USER IF NOT EXISTS '${MYSQL_REPLICATION_USER}'@'%' IDENTIFIED BY '${MYSQL_REPLICATION_PASSWORD}';"
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "GRANT REPLICATION SLAVE ON *.* TO '${MYSQL_REPLICATION_USER}'@'%';"
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"
                  echo "Configuraci贸n de replicaci贸n maestro completada"
                else
                  echo "Configurando nodo esclavo..."
                  until mysql -uroot -p${MYSQL_ROOT_PASSWORD} -h mysql-0.mysql-service.prod.svc.cluster.local -e "SELECT 1"; do  # DNS actualizado
                    sleep 2
                  done
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "STOP SLAVE;"
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "CHANGE MASTER TO MASTER_HOST='mysql-0.mysql-service.prod.svc.cluster.local', MASTER_USER='${MYSQL_REPLICATION_USER}', MASTER_PASSWORD='${MYSQL_REPLICATION_PASSWORD}', MASTER_AUTO_POSITION=1;"  # DNS actualizado
                  mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "START SLAVE;"
                  echo "Configuraci贸n de replicaci贸n esclavo completada"
                fi
        resources:
          requests:
            memory: "1Gi"
            cpu: 1
          limits:
            memory: "1Gi"
            cpu: 1
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: root-password
        - name: MYSQL_REPLICATION_USER
          value: replicator
        - name: MYSQL_REPLICATION_PASSWORD
          value: secret
        - name: MYSQL_DATABASE
          value: "anxtv_accounts_db"
        - name: MYSQL_USER
          value: admin
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: user-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
      namespace: prod
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-storage
      resources:
        requests:
          storage: 3Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service  # Nombre actualizado
  namespace: prod
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    name: mysql
  clusterIP: None  # Headless Service
  selector:
    app: mysql